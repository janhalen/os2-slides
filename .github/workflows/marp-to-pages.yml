name: marp-to-pages
concurrency: marp-to-pages

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Ensure the build directory exists
      - name: Ensure build dir exists
        run: mkdir -p build

      # Step 3: Copy the images directory (if it exists) into the build directory
      - name: Copy images directory (if exists)
        run: if [[ -d img ]]; then cp -R img build/img; fi

      # Step 4: Check if the docs folder exists
      - name: Check if docs folder exists
        id: docs-folder-exists
        run: bash -c "[[ -d docs ]] ; echo \"has_docs=\$?\" >> \"$GITHUB_OUTPUT\""

      # Step 5: Use Marp to convert Markdown files in the docs folder to HTML
      - name: Marp Build (docs folder, if exists)
        if: steps.docs-folder-exists.outputs.has_docs == '0'
        uses: docker://marpteam/marp-cli:v3.4.0
        with:
          args: --user $(id -u):$(id -g) -I docs/ -o build/docs/
        env:
          MARP_USER: root:root

      # Step 6: Create a .nojekyll file to disable Jekyll processing on GitHub Pages
      # Explanation: GitHub Pages uses Jekyll by default to process files. The .nojekyll file
      # tells GitHub Pages to skip Jekyll processing, which is necessary for serving static
      # files like the HTML generated by Marp.
      - name: Create .nojekyll file
        run: echo "" > build/docs/.nojekyll

      # Step 7: Deploy the contents of the build/docs folder to the gh-pages branch
      - name: Deploy production
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4.6.1
        with:
          branch: gh-pages
          folder: ./build/docs/
          clean-exclude: pr-preview/

